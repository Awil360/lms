pipeline {
    agent any

    environment {
        // Define environment variables
        DOCKER_REGISTRY = 'awil360'
        DOCKER_IMAGE = 'awil360/lms-front'
        DOCKER_CREDENTIALS_ID = 'lms-docker'
    }
        
    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code
                checkout scm
            }
        }
    }

        stage('Read Version') {
            steps {
                script {
                    def packageJson = readFile('webapp/package.json')
                    def json = readJSON text: packageJson
                    env.VERSION = json.version
                    env.IMAGE_TAG = "${DOCKER_IMAGE}:${env.VERSION}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                  sh "docker container run -dt --name lms-db -e POSTGRES_PASSWORD=awil123456 postgres"
                }
            }
        }


        stage('Build Docker Image') {
            steps {
                script {
                    docker.build(env.IMAGE_TAG,'webapp')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('', env.DOCKER_CREDENTIALS_ID) {
                        docker.image(env.IMAGE_TAG).push()
                    }
                }
            }
        }
    }
}
    
