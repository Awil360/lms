pipeline {
    agent any

    stages {
        stage('sonar analysis') {
            steps {
                echo "code quality analysis"
                sh 'cd webapp && sudo docker run  --rm -e SONAR_HOST_URL="http://35.86.175.8:9000" -e SONAR_TOKEN="sqp_eceb3794b310b31fa87bbcb6d92796b08ed5780e" -v  ".:/usr/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=lms '
                echo "code completed"
            }
        }
        stage('build LMS') {
            steps {
                echo "build the artifact"
                sh 'cd webapp && npm install && npm run build '
                echo 'build completed'

            }
        }
        stage('Read JSON') {
            steps {
                script {
                    def packageJson = readJSON file:'webapp/package.json'
                    def packageJSONVersion = packageJson.version
                    echo "${packageJSONVersion}"
                    sh "zip webapp/lms-${packageJSONVersion}.zip -r webapp/dist "
                  sh  "curl -v -u admin:awil123456 --upload-file webapp/lms-${packageJSONVersion}.zip http://35.86.175.8:8081/repository/lms/"

                }
           }
        }


        stage('deploy') {
            steps {
                script {
                    def packageJson = readJSON file:'webapp/package.json'
                    def packageJSONVersion = packageJson.version
                    echo "${packageJSONVersion}"
                sh "curl -u admin:awil123456 -X GET 'http://35.86.175.8:8081/repository/lms/lms-${packageJSONVersion}.zip' --output lms-${packageJSONVersion}.zip"
                sh "sudo rm -rf /var/www/html/*"
                sh "sudo -o unzip lms-${packageJSONVersion}.zip"
                sh "sudo cp -r webapp/dist/*  /var/www/html"

  
                }
           }
        }
   }
}
    
